{
  "name": "Ollama Embeddings Workflow",
  "nodes": [
    {
      "parameters": {},
      "type": "n8n-nodes-base.manualTrigger",
      "typeVersion": 1,
      "position": [200, 300],
      "id": "manual-trigger",
      "name": "Manual Trigger"
    },
    {
      "parameters": {
        "jsCode": "// Your JSON array with text chunks\nconst chunks = [\n  {\n    \"id\": 1,\n    \"content\": \"This is the first chunk about planning policy\",\n    \"metadata\": {\"section\": \"Introduction\"}\n  },\n  {\n    \"id\": 2,\n    \"content\": \"This is the second chunk about site analysis\",\n    \"metadata\": {\"section\": \"Site Context\"}\n  },\n  {\n    \"id\": 3,\n    \"content\": \"This is the third chunk about development proposal\",\n    \"metadata\": {\"section\": \"Proposal\"}\n  }\n];\n\n// Return each chunk as a separate item for processing\nreturn chunks.map(chunk => ({\n  json: {\n    text: chunk.content,\n    chunk_id: chunk.id,\n    metadata: chunk.metadata\n  }\n}));"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [400, 300],
      "id": "prepare-chunks",
      "name": "Prepare Chunks"
    },
    {
      "parameters": {
        "model": "nomic-embed-text:latest",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.embeddingsOllama",
      "typeVersion": 1,
      "position": [600, 300],
      "id": "ollama-embeddings",
      "name": "Ollama Embeddings",
      "credentials": {
        "ollamaApi": {
          "id": "your-ollama-credential-id",
          "name": "Ollama account"
        }
      }
    },
    {
      "parameters": {
        "mode": "insert",
        "tableName": {
          "__rl": true,
          "value": "documents",
          "mode": "list"
        },
        "options": {
          "metadata": {
            "metadataValues": [
              {
                "name": "chunk_id",
                "value": "={{ $json.chunk_id }}"
              },
              {
                "name": "section",
                "value": "={{ $json.metadata.section }}"
              }
            ]
          }
        }
      },
      "type": "@n8n/n8n-nodes-langchain.vectorStoreSupabase",
      "typeVersion": 1.3,
      "position": [800, 300],
      "id": "supabase-vector-store",
      "name": "Supabase Vector Store",
      "credentials": {
        "supabaseApi": {
          "id": "your-supabase-credential-id",
          "name": "Supabase account"
        }
      }
    }
  ],
  "connections": {
    "Manual Trigger": {
      "main": [
        [
          {
            "node": "Prepare Chunks",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Prepare Chunks": {
      "main": [
        [
          {
            "node": "Ollama Embeddings",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Ollama Embeddings": {
      "ai_embedding": [
        [
          {
            "node": "Supabase Vector Store",
            "type": "ai_embedding",
            "index": 0
          }
        ]
      ]
    }
  },
  "pinData": {},
  "meta": {
    "templateCredsSetupCompleted": true
  }
}